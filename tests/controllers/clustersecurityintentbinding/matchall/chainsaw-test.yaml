# SPDX-License-Identifier: Apache-2.0
# Copyright 2023 Authors of Nimbus

apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: multiple-ns-add-csib
spec:
  description: >
    1. Create prod, dev, staging ns
    2. Add security intent
    3. Add csib 
    4. Delete prod namespace
    5. Create prod namespace again
  steps:
    - name: "Create prod, dev, staging Namespaces"
      try:
        - apply:
            file: ns.yaml

    - name: "Create a SecurityIntent"
      try:
        - apply:
            file: ../../resources/namespaced/dns-manipulation-si.yaml

    - name: "Create a ClusterSecurityIntentBinding"
      try:
        - apply:
            file: dns-manipulation-csib.yaml

    - name: "Verify ClusterNimbusPolicy creation"
      try:
        - assert:
            file: cluster-nimbus-policy-assert.yaml

    - name: "Verify NimbusPolicy creation in default"
      try:
        - assert:
            file: nimbus-policy-assert.yaml

    - name: "Verify NimbusPolicy creation in dev namespace"
      try:
        - assert:
            file: nimbus-policy-assert-dev.yaml

    - name: "Verify NimbusPolicy creation in staging namespace"
      try:
        - assert:
            file: nimbus-policy-assert-staging.yaml

    - name: "Verify NimbusPolicy creation in prod namespace"
      try:
        - assert:
            file: nimbus-policy-assert-prod.yaml

    - name: "Delete prod namespace"
      try:
        - delete:
            ref:
              apiVersion: v1
              kind: namespace
              name: prod
            expect:
              - match:
                  # this check applies only if the match
                  # statement below evaluates to `true`
                  apiVersion: v1
                  kind: namespace
                  name: prod
                check:
                  # an error is expected, this will:
                  # - succeed if the operation failed
                  # - fail if the operation succeeded
                  ($error != null): true

    - name: "Verify the NimbusPolicy deletion"
      try:
        - script:
            content: kubectl -n prod get np nimbus-ctlr-gen-dns-manipulation-binding
            check:
              ($error != null): true

    - name: "Verify ClusterNimbusPolicy presence"
      try:
        - assert:
            file: cluster-nimbus-policy-assert.yaml

    - name: "Verify NimbusPolicy presence in default"
      try:
        - assert:
            file: nimbus-policy-assert.yaml

    - name: "Verify NimbusPolicy presence in dev namespace"
      try:
        - assert:
            file: nimbus-policy-assert-dev.yaml

    - name: "Verify NimbusPolicy presence in staging namespace"
      try:
        - assert:
            file: nimbus-policy-assert-staging.yaml

    - name: "Create prod Namespace again"
      try:
        - apply:
            file: ns.yaml

    - name: "Verify ClusterNimbusPolicy presence"
      try:
        - assert:
            file: cluster-nimbus-policy-assert.yaml

    - name: "Verify NimbusPolicy presence in default"
      try:
        - assert:
            file: nimbus-policy-assert.yaml

    - name: "Verify NimbusPolicy presence in dev namespace"
      try:
        - assert:
            file: nimbus-policy-assert-dev.yaml

    - name: "Verify NimbusPolicy presence in staging namespace"
      try:
        - assert:
            file: nimbus-policy-assert-staging.yaml

    - name: "Verify NimbusPolicy creation in prod namespace"
      try:
        - assert:
            file: nimbus-policy-assert-prod.yaml
