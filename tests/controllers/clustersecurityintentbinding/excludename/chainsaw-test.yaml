# SPDX-License-Identifier: Apache-2.0
# Copyright 2023 Authors of Nimbus

apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: csib-exclude-names-add-update-csib
spec:
  description: >
    This test case tests out multiple scenarios. 
    1. First we add namespaces dev, staging, and prod. Then we create a csib with excludeNames for
       dev and staging. This should result in creation of Nimbus policies for all namespaces 
       except "dev", "staging".
    2. Then we update csib for excludeNames with dev, prod, regional. This should result in the
       deletion of the the prod nimbus policy
    3. Finally, we add a ns with names management, regional. management ns is not part of the excludeNames
       while regional is part of the excludeNames. This step should result in creation of nimbus 
       policy for management ns, and nimbus policy for regional should not be created
  steps:
    - name: "1. Create prod, dev, staging Namespaces"
      try:
        - apply:
            file: ns.yaml

    - name: "Create a SecurityIntent"
      try:
        - apply:
            file: ../../resources/namespaced/escape-to-host-si.yaml

    - name: "2. Create a ClusterSecurityIntentBinding"
      try:
        - apply:
            file: escape-to-host-csib.yaml

    - name: "Verify ClusterNimbusPolicy creation"
      try:
        - assert:
            file: cluster-nimbus-policy-assert.yaml

    - name: "Verify NimbusPolicy absence in dev namespace"
      try:
        - script:
            content: kubectl -n dev get np nimbus-ctlr-gen-escape-to-host
            check:
              ($error != null): true

    - name: "Verify NimbusPolicy absence in staging namespace"
      try:
        - script:
            content: kubectl -n staging get np nimbus-ctlr-gen-escape-to-host
            check:
              ($error != null): true

    - name: "Verify NimbusPolicy creation in prod"
      try:
        - assert:
            file: nimbus-policy-assert-prod.yaml

    - name: "3. Update the ClusterSecurityIntentBinding to have dev, prod, regional in excludeNames"
      try:
        - apply:
            file: escape-to-host-dev-prod-regional-csib.yaml

    - name: "Verify ClusterNimbusPolicy presence"
      try:
        - assert:
            file: cluster-nimbus-policy-assert.yaml

    - name: "Verify NimbusPolicy absence in dev namespace"
      try:
        - script:
            content: kubectl -n dev get np nimbus-ctlr-gen-escape-to-host
            check:
              ($error != null): true

    - name: "Verify NimbusPolicy absence in prod namespace"
      try:
        - script:
            content: kubectl -n prod get np nimbus-ctlr-gen-escape-to-host
            check:
              ($error != null): true

    - name: "4. Create the management, regional namespaces"
      try:
        - apply:
            file: ns-regional-mgmt.yaml

    - name: "Verify ClusterNimbusPolicy presence"
      try:
        - assert:
            file: cluster-nimbus-policy-assert.yaml

    - name: "Verify NimbusPolicy absence in dev namespace"
      try:
        - script:
            content: kubectl -n dev get np nimbus-ctlr-gen-escape-to-host
            check:
              ($error != null): true

    - name: "Verify NimbusPolicy absence in prod namespace"
      try:
        - script:
            content: kubectl -n prod get np nimbus-ctlr-gen-escape-to-host
            check:
              ($error != null): true

    - name: "Verify NimbusPolicy absence in regional namespace"
      try:
        - script:
            content: kubectl -n regional get np nimbus-ctlr-gen-escape-to-host
            check:
              ($error != null): true

    - name: "Verify NimbusPolicy presence in management"
      try:
        - script:
            content: kubectl -n management get np nimbus-ctlr-gen-escape-to-host
            check:
              ($error == null): true
