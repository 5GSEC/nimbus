apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: np-creation
spec:
  timeouts:
    assert: 10s
  steps:
  - name: 01-Create-Resources-Assert-NP
    try:
    - apply:
        file: ../../../examples/namespaced/dns-manipulation-si-sib.yaml
    - assert:
        file: ../../../examples/namespaced/dns-manipulation-si-sib.yaml
    - assert:
        file: nimbus-policy.yaml

  - name: 02-Assert-SI-Status(action)
    try:
      - script:
          content: kubectl get si -n $NAMESPACE dns-manipulation -o=jsonpath='{.status.action}'
          check: 
            (contains($stdout, 'Block')): true

  - name: 03-Assert-SI-Status(id)
    try:
      - script:
          content: kubectl get si -n $NAMESPACE dns-manipulation -o=jsonpath='{.status.id}'
          check: 
            (contains($stdout, 'dnsManipulation')): true

  - name: 04-Assert-SIB-Status(No. of Bound Intents)
    try:
      - script:
          content: kubectl get sib -n $NAMESPACE dns-manipulation-binding -o=jsonpath='{.status.numberOfBoundIntents}'
          check: 
            (contains($stdout, '1')): true

  - name: 05-Assert-SIB-Status(Bound Intents)
    try:
      - script:
          content: kubectl get sib -n $NAMESPACE dns-manipulation-binding -o=jsonpath='{.status.boundIntents}'
          check: 
            (contains($stdout, 'dns-manipulation')): true

  - name: 06-Assert-SIB-Status(NimbusPolicy)
    try:
      - script:
          content: kubectl get sib -n $NAMESPACE dns-manipulation-binding -o=jsonpath='{.status.nimbusPolicy}'
          check: 
            (contains($stdout, 'dns-manipulation-binding')): true

